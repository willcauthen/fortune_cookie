<div class="gameResults" id="winScreen" style="display:none;">
	<h3>
		<p>You did it! You beat the odds, and crushed all opposition and fortune cookies standing in your path. Dare you continue?</p>
	</h3>
	<a href="/game/2"><button>I dare.</button></a>
</div>

<div class="gameResults" id="loseScreen" style="display:none;">
	<h3>
		<p>You have failed, utterly and completely. But it is only a defeat if you fail to continue. Can you take more punishment?</p>
	</h3>
	<button onclick="refresh()">Yes sir, may I have another?</button>
</div>

<p>Now, the main event! The ultimate test of human endurance, challenging you to surpass the limits of time itself!</p>
<h2>CAN YOU DESTROY ALL THE COOKIES BEFORE TIME RUNS OUT??</h2>

<canvas id="killingField" width="400" height="400" style="border:1px solid red" onclick="gameStart()" >
	
</canvas>


<script>
	//sets up syntax for canvas element
	var canvas = document.getElementById("killingField");
	var context = canvas.getContext("2d");
	//prevents game from being reinitialized
	var uninitiated = true;
	// array to detect whcih fortune cookies have been exploded
	var winner = [false, false, false, false, false, false, false, false, false];
	// declares variable gameTime, so it can be canceled in the event of a victory by user
	var gameTime;
	
function gameStart() {
	//set click event within the canvas element
	canvas.addEventListener('click', function(e) {
		//offset is important to track clicks independent of where canvas appears on the screen
		var canvasLeft = canvas.offsetLeft,
			canvasTop  = canvas.offsetTop;
		var pos = {
			x : e.pageX - canvasLeft, 
			y : e.pageY - canvasTop
		};
			//defines imgObj as the explosion icon. so far, it appears JS only recognizes 'img and imgObj' as legitimate image syntax
			var imgObj = new Image();
			imgObj.src = "/img/explosion.png";

			//painstaking function which detects whether or not clicks landed on a chosen cookie, updates the image, and sets the corresponding array index accordingly
		if (pos.x < 75 && pos.y <75) {
			winner[0] = true;
			winnerCheck(winner);
			context.drawImage(imgObj, pos.x - 65, pos.y - 65, 150, 150);
		} else if ((pos.x < 215 && pos.x > 155) && (pos.y < 75)) {
			winner[1] = true;
			winnerCheck(winner);
			context.drawImage(imgObj, pos.x - 65, pos.y - 65, 150, 150);
		} else if ((pos.x < 365 && pos.x > 305) && (pos.y < 75) ) {
			winner[2] = true;
			winnerCheck(winner);
			context.drawImage(imgObj, pos.x - 65, pos.y - 65, 150, 150);
		} else if ((pos.x < 75) && (pos.y < 215 && pos.y > 155)) {
			winner[3] = true;
			winnerCheck(winner);
			context.drawImage(imgObj, pos.x - 65, pos.y - 65, 150, 150);
		} else if ((pos.x < 215 && pos.x > 155)&& (pos.y < 215 && pos.y > 155)){
			winner[4] = true;
			winnerCheck(winner);
			context.drawImage(imgObj, pos.x - 65, pos.y - 65, 150, 150);
		} else if ((pos.x < 365 && pos.x > 305) && (pos.y < 215 && pos.y > 155)) {
			winner[5] = true;
			winnerCheck(winner);
			context.drawImage(imgObj, pos.x - 65, pos.y - 65, 150, 150);
		} else if ((pos.x < 75) && (pos.y < 365 && pos.y > 305)) {
			winner[6] = true;
			winnerCheck(winner);
			context.drawImage(imgObj, pos.x - 65, pos.y - 65, 150, 150);
		} else if ((pos.x < 215 && pos.x > 155) && (pos.y < 365 && pos.y > 305)) {
			winner[7] = true;
			winnerCheck(winner);
			context.drawImage(imgObj, pos.x - 65, pos.y - 65, 150, 150);
		} else if ((pos.x < 365 && pos.x > 305) && (pos.y < 365 && pos.y > 305)) {
			winner[8] = true;
			winnerCheck(winner);
			context.drawImage(imgObj, pos.x - 65, pos.y - 65, 150, 150);
		} else  {
			console.log("MISSED!! OMG");
			winnerCheck(winner);
		}
		console.log(pos.x, pos.y);


	}, true );

	//begins game setup, boolean is present to prevent game being reset
	if (uninitiated) {
		uninitiated = false;
		//below initiates the timer function, which is currently turned off for aesthetic.
		// gameTimer(9);
		console.log("function known as gameTime is hereby running");
		// draws the cookiez
		var img = new Image();
		img.onload = function() {
			context.drawImage(img, 0, 0, 75, 75);
			context.drawImage(img, 0, 150, 75, 75);
			context.drawImage(img, 0, 300, 75, 75);
			context.drawImage(img, 150, 0, 75, 75);
			context.drawImage(img, 300, 0, 75, 75);
			context.drawImage(img, 150, 150, 75, 75);
			context.drawImage(img, 150, 300, 75, 75);
			context.drawImage(img, 300, 150, 75, 75);
			context.drawImage(img, 300, 300, 75, 75);
		};
		img.src = "/img/Fortune-Cookie.png";
	} 
} 
// loops through array to check if all cookies have been suitably smashed
function winnerCheck(array) {
	for (var i = 0; i < winner.length; i++){
		if (array[i] === false ) {
			console.log("no winner yet :-(");
				break;
		// if loop makes it to the final index and it returns true, a div dominates the DOM asking if the user would like to continue to level 2
		} else if (i == 8){
			clearTimeout(gameTime);
			console.log("There's a Winner, and it is you!");
			var gameResults = document.getElementById("winScreen");
			gameResults.style.display = "block";
			//this calls a function that adjusts the score by a single point. I'm sloppily utilizing a bug where the function is iterated for each click which has taken place on the canvas, which at minimum is 10
			adjustScore();
		}
	}
}
//function for game timer. when timer runs out, a div is shown which takes up the DOM announcing a failure
function gameTimer(num) {
	num = num * 1000;
	gameTime = setTimeout(gameOver, num);
	console.log("game timer has been started");
}

function gameOver() {
	console.log("game is over! sorry charlie");
	var gameResults = document.getElementById("loseScreen");
	gameResults.style.display = "block";
}
</script>